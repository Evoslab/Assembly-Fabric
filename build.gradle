plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.mod_id
group = project.maven_group

if (System.env.CI == "true") {
	version = "${project.mod_version}+a${System.env.GITHUB_RUN_NUMBER}.${System.env.GITHUB_REF.replaceAll("refs/heads/", "").replaceAll("/", "-")}"
}
else {
	version = "${project.mod_version}+${project.minecraft_version}-fabric"
}

minecraft {}

repositories {
	maven { url "https://jitpack.io/" }
	maven { url "https://maven.dblsaiko.net/" }
	maven { url "https://server.bbkr.space/artifactory/libs-release/" }
	maven { url 'https://maven.blamejared.com/' }
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.shadew.net/" }
	maven { url "https://maven.enginehub.org/repo/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	/*
     * COMPATIBILITY
     */

	String canvas = "grondag:canvas-mc117-1.17:${project.canvas_version}"
	if (!Boolean.parseBoolean("${project.ip_enabled}") && Boolean.parseBoolean("${project.canvas_enabled}")) { // Immersive Portals is incompatible with Canvas
		modImplementation(canvas) {
			exclude group: "net.fabricmc.fabric-api"
			exclude group: "me.shedaniel.cloth"
		}
	} else {
		modCompileOnly(canvas) {
			exclude group: "net.fabricmc.fabric-api"
			exclude group: "me.shedaniel.cloth"
		}
	}

	String ip = "com.github.qouteall.ImmersivePortalsMod:build:${project.ip_version}"
	if (Boolean.parseBoolean("${project.ip_enabled}")) {
		modImplementation(ip) {
			exclude group: "net.fabricmc.fabric-api"
			exclude group: "me.shedaniel.cloth"
			exclude group: "com.github.Virtuoel"
		}
	} else {
		modCompileOnly(ip) {
			exclude group: "net.fabricmc.fabric-api"
			exclude group: "me.shedaniel.cloth"
			exclude group: "com.github.Virtuoel"
		}
	}

	modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
	include ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")

	modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") { exclude group: "net.fabricmc.fabric-api" }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
		}
	}
}